server {
    listen *:80;
    listen *:443 ssl;

    server_name api.myapp.com;

    ssl_certificate     /root/server.crt;
    ssl_certificate_key /root/server.key;
    
    # Rewrite Rule for HTTP to HTTPS redirection
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    # Client connection (marvel-eye) 
    location /socket.io/{
        access_log off;

        proxy_pass http://localhost:8200/socket.io/;

        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

        # WebSockets support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Internal proxy pass to real app
    location /{
        proxy_pass http://localhost:8200/proxy_name/;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        error_page 502 = @fallback;
    }

    location @fallback {
        #rewrite ^/proxy_name(.*)$ $1 break;
        proxy_pass http://api.internal;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
    }

}